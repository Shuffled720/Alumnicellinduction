{"ast":null,"code":"import axios from 'axios';\nimport { API_NOTIFICATION_MESSAGES, SERVICE_URLS } from '../constants/config';\nimport { getAccessToken, getType } from '../utils/common-utils';\nconst API_URL = \"http://localhost:8000\";\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n});\naxiosInstance.interceptors.request.use(function (config) {\n  if (config.TYPE.params) {\n    config.params = config.TYPE.params;\n  } else if (config.TYPE.query) {\n    config.url = config.url + '/' + config.TYPE.query;\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(function (response) {\n  // Stop global loader here\n  return processResponse(response);\n}, function (error) {\n  // Stop global loader here\n  return Promise.reject(ProcessError(error));\n});\nconst processResponse = response => {\n  if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n    return {\n      isSuccess: true,\n      data: response.data\n    };\n  } else {\n    return {\n      isFailure: true,\n      status: response === null || response === void 0 ? void 0 : response.status,\n      msg: response === null || response === void 0 ? void 0 : response.msg,\n      code: response === null || response === void 0 ? void 0 : response.code\n    };\n  }\n};\nconst ProcessError = async error => {\n  if (error.response) {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403) {\n      sessionStorage.clear();\n    } else {\n      console.log(\"ERROR IN RESPONSE: \", error.toJSON());\n      return {\n        isError: true,\n        msg: API_NOTIFICATION_MESSAGES.responseFailure,\n        code: error.response.status\n      };\n    }\n  } else if (error.request) {\n    console.log(\"ERROR IN RESPONSE: \", error.toJSON());\n    return {\n      isError: true,\n      msg: API_NOTIFICATION_MESSAGES.requestFailure,\n      code: \"\"\n    };\n  } else {\n    console.log(\"ERROR IN RESPONSE: \", error.toJSON());\n    return {\n      isError: true,\n      msg: API_NOTIFICATION_MESSAGES.networkError,\n      code: \"\"\n    };\n  }\n};\n_c = ProcessError;\nconst API = {};\nfor (const [key, value] of Object.entries(SERVICE_URLS)) {\n  API[key] = (body, showUploadProgress, showDownloadProgress) => axiosInstance({\n    method: value.method,\n    url: value.url,\n    data: value.method === 'DELETE' ? '' : body,\n    responseType: value.responseType,\n    headers: {\n      authorization: getAccessToken()\n    },\n    TYPE: getType(value, body),\n    onUploadProgress: function (progressEvent) {\n      if (showUploadProgress) {\n        let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        showUploadProgress(percentCompleted);\n      }\n    },\n    onDownloadProgress: function (progressEvent) {\n      if (showDownloadProgress) {\n        let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        showDownloadProgress(percentCompleted);\n      }\n    }\n  });\n}\nexport { API };\nvar _c;\n$RefreshReg$(_c, \"ProcessError\");","map":{"version":3,"names":["axios","API_NOTIFICATION_MESSAGES","SERVICE_URLS","getAccessToken","getType","API_URL","axiosInstance","create","baseURL","timeout","headers","interceptors","request","use","config","TYPE","params","query","url","error","Promise","reject","response","processResponse","ProcessError","status","isSuccess","data","isFailure","msg","code","sessionStorage","clear","console","log","toJSON","isError","responseFailure","requestFailure","networkError","API","key","value","Object","entries","body","showUploadProgress","showDownloadProgress","method","responseType","authorization","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","onDownloadProgress"],"sources":["C:/Users/Vishal/webdev/alumni/induction-website/client/src/services/api.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nimport { API_NOTIFICATION_MESSAGES, SERVICE_URLS } from '../constants/config'\r\nimport { getAccessToken,  getType } from '../utils/common-utils';\r\n\r\n\r\n\r\nconst API_URL = \"http://localhost:8000\";\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: API_URL,\r\n    timeout: 10000,\r\n    headers: {\r\n        \"content-type\": \"application/json\"\r\n    }\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n    function (config) {\r\n        if (config.TYPE.params) {\r\n            config.params = config.TYPE.params\r\n        } else if (config.TYPE.query) {\r\n            config.url = config.url + '/' + config.TYPE.query;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n    function (response) {\r\n        // Stop global loader here\r\n        return processResponse(response);\r\n    },\r\n    function (error) {\r\n        // Stop global loader here\r\n        return Promise.reject(ProcessError(error));\r\n    }\r\n)\r\n\r\n\r\n\r\nconst processResponse = (response) => {\r\n    if (response?.status === 200) {\r\n        return { isSuccess: true, data: response.data }\r\n    } else {\r\n        return {\r\n            isFailure: true,\r\n            status: response?.status,\r\n            msg: response?.msg,\r\n            code: response?.code\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst ProcessError = async (error) => {\r\n    if (error.response) {\r\n\r\n        if (error.response?.status === 403) {\r\n            sessionStorage.clear();\r\n        } else {\r\n            console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n            return {\r\n                isError: true,\r\n                msg: API_NOTIFICATION_MESSAGES.responseFailure,\r\n                code: error.response.status\r\n            }\r\n        }\r\n    } else if (error.request) {\r\n        console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n        return {\r\n            isError: true,\r\n            msg: API_NOTIFICATION_MESSAGES.requestFailure,\r\n            code: \"\"\r\n        }\r\n    } else {\r\n        console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n        return {\r\n            isError: true,\r\n            msg: API_NOTIFICATION_MESSAGES.networkError,\r\n            code: \"\"\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst API = {};\r\n\r\nfor (const [key, value] of Object.entries(SERVICE_URLS)) {\r\n    API[key] = (body, showUploadProgress, showDownloadProgress) =>\r\n        axiosInstance({\r\n            method: value.method,\r\n            url: value.url,\r\n            data: value.method === 'DELETE' ? '' : body,\r\n            responseType: value.responseType,\r\n            headers: {\r\n                authorization: getAccessToken(),\r\n            },\r\n            TYPE: getType(value, body),\r\n            onUploadProgress: function(progressEvent) {\r\n                if (showUploadProgress) {\r\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n                    showUploadProgress(percentCompleted);\r\n                }\r\n            },\r\n            onDownloadProgress: function(progressEvent) {\r\n                if (showDownloadProgress) {\r\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n                    showDownloadProgress(percentCompleted);\r\n                }\r\n            }\r\n        });\r\n}\r\n\r\nexport { API };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}