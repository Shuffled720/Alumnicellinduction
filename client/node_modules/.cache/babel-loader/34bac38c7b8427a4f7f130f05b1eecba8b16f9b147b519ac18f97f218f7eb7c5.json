{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vishal\\\\webdev\\\\alumni\\\\induction-website\\\\client\\\\src\\\\components\\\\account\\\\Login.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { API } from '../../services/api';\nimport { DataContext } from '../../context/DataProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst loginInitialValues = {\n  username: '',\n  password: ''\n};\nconst signupInitialValues = {\n  name: '',\n  username: '',\n  password: ''\n};\nexport const Login = _ref => {\n  let {\n    isUserAuthenticated\n  } = _ref;\n  // const [login, setLogin] = useState(loginInitialValues);\n  // const [signup, setSignup] = useState(signupInitialValues);\n  // const [error, showError] = useState('');\n  // const [account, toggleAccount] = useState('login');\n\n  // const navigate = useNavigate();\n  // const { setAccount } = useContext(DataContext);\n  // useEffect(() => {\n  //     showError(false);\n  // }, [login])\n\n  // const onValueChange = (e) => {\n  //     setLogin({ ...login, [e.target.name]: e.target.value });\n  // }\n\n  // const onInputChange = (e) => {\n  //     setSignup({ ...signup, [e.target.name]: e.target.value });\n  // }\n\n  // const loginUser = async () => {\n  //     let response = await API.userLogin(login);\n  //     if (response.isSuccess) {\n  //         showError('');\n\n  //         sessionStorage.setItem('accessToken', `Bearer ${response.data.accessToken}`);\n  //         sessionStorage.setItem('refreshToken', `Bearer ${response.data.refreshToken}`);\n  //         setAccount({ name: response.data.name, username: response.data.username });\n\n  //         isUserAuthenticated(true)\n  //         setLogin(loginInitialValues);\n  //         navigate('/');\n  //     } else {\n  //         showError('Something went wrong! please try again later');\n  //     }\n  // }\n\n  // const signupUser = async () => {\n  //     let response = await API.userSignup(signup);\n  //     if (response.isSuccess) {\n  //         showError('');\n  //         setSignup(signupInitialValues);\n  //         toggleAccount('login');\n  //     } else {\n  //         showError('Something went wrong! please try again later');\n  //     }\n  // }\n\n  // const toggleSignup = () => {\n  //     account === 'signup' ? toggleAccount('login') : toggleAccount('signup');\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"kbhkbhjvj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","API","DataContext","loginInitialValues","username","password","signupInitialValues","name","Login","isUserAuthenticated"],"sources":["C:/Users/Vishal/webdev/alumni/induction-website/client/src/components/account/Login.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nimport { API } from '../../services/api';\r\nimport { DataContext } from '../../context/DataProvider';\r\n\r\n\r\n\r\nconst loginInitialValues = {\r\n    username: '',\r\n    password: ''\r\n};\r\n\r\nconst signupInitialValues = {\r\n    name: '',\r\n    username: '',\r\n    password: '',\r\n};\r\nexport const Login = ({ isUserAuthenticated }) => {\r\n    // const [login, setLogin] = useState(loginInitialValues);\r\n    // const [signup, setSignup] = useState(signupInitialValues);\r\n    // const [error, showError] = useState('');\r\n    // const [account, toggleAccount] = useState('login');\r\n\r\n    // const navigate = useNavigate();\r\n    // const { setAccount } = useContext(DataContext);\r\n    // useEffect(() => {\r\n    //     showError(false);\r\n    // }, [login])\r\n\r\n    // const onValueChange = (e) => {\r\n    //     setLogin({ ...login, [e.target.name]: e.target.value });\r\n    // }\r\n\r\n    // const onInputChange = (e) => {\r\n    //     setSignup({ ...signup, [e.target.name]: e.target.value });\r\n    // }\r\n\r\n    // const loginUser = async () => {\r\n    //     let response = await API.userLogin(login);\r\n    //     if (response.isSuccess) {\r\n    //         showError('');\r\n\r\n    //         sessionStorage.setItem('accessToken', `Bearer ${response.data.accessToken}`);\r\n    //         sessionStorage.setItem('refreshToken', `Bearer ${response.data.refreshToken}`);\r\n    //         setAccount({ name: response.data.name, username: response.data.username });\r\n\r\n    //         isUserAuthenticated(true)\r\n    //         setLogin(loginInitialValues);\r\n    //         navigate('/');\r\n    //     } else {\r\n    //         showError('Something went wrong! please try again later');\r\n    //     }\r\n    // }\r\n\r\n    // const signupUser = async () => {\r\n    //     let response = await API.userSignup(signup);\r\n    //     if (response.isSuccess) {\r\n    //         showError('');\r\n    //         setSignup(signupInitialValues);\r\n    //         toggleAccount('login');\r\n    //     } else {\r\n    //         showError('Something went wrong! please try again later');\r\n    //     }\r\n    // }\r\n\r\n    // const toggleSignup = () => {\r\n    //     account === 'signup' ? toggleAccount('login') : toggleAccount('signup');\r\n    // }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                kbhkbhjvj\r\n                {/* <input label='Enter Name' value={login.username} name='username' onChange={(e) => onValueChange(e)} ></input>\r\n                <input name=\"password\" value={login.password} label='password' onChange={(e) => { onValueChange(e) }} ></input>\r\n                <button onClick={() => loginUser()}>\r\n                    submit\r\n                </button> */}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAG9C,SAASC,GAAG,QAAQ,oBAAoB;AACxC,SAASC,WAAW,QAAQ,4BAA4B;AAAC;AAAA;AAIzD,MAAMC,kBAAkB,GAAG;EACvBC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,mBAAmB,GAAG;EACxBC,IAAI,EAAE,EAAE;EACRH,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,MAAMG,KAAK,GAAG,QAA6B;EAAA,IAA5B;IAAEC;EAAoB,CAAC;EACzC;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAKA,oBACI;IAAA,uBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAOM,iBAEP;AAEX,CAAC;AAAA,KApEYD,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}